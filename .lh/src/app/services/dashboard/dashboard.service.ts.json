{
    "sourceFile": "src/app/services/dashboard/dashboard.service.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1751612145779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1751612774342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,16 @@\n import { HttpClient } from '@angular/common/http';\n import { Injectable } from '@angular/core';\n+import { Observable } from 'rxjs';\n+import { ResponseModel } from '../../models/login.model';\n \n @Injectable({\n   providedIn: 'root'\n })\n export class DashboardService {\n \n   constructor(private http: HttpClient) { }\n \n-  getSitesByClientId() {\n-    this.http.get('https://api.freeprojectapi.com/api/SmartParking/GetSitesByClientId?id=2')\n+  getSitesByClientId(): Observable<ResponseModel> {\n+     return this.http.get<ResponseModel>('https://api.freeprojectapi.com/api/SmartParking/GetSitesByClientId?id=2')\n   }\n }\n"
                },
                {
                    "date": 1751612945981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,20 @@\n import { HttpClient } from '@angular/common/http';\n-import { Injectable } from '@angular/core';\n+import { inject, Injectable } from '@angular/core';\n import { Observable } from 'rxjs';\n import { ResponseModel } from '../../models/login.model';\n+import { LoginService } from '../login-service/login.service';\n \n @Injectable({\n   providedIn: 'root'\n })\n export class DashboardService {\n \n+  loginService = inject(LoginService);\n+\n   constructor(private http: HttpClient) { }\n \n   getSitesByClientId(): Observable<ResponseModel> {\n-     return this.http.get<ResponseModel>('https://api.freeprojectapi.com/api/SmartParking/GetSitesByClientId?id=2')\n+    const clientId = this.loginService.loggedUserData.extraId\n+     return this.http.get<ResponseModel>('https://api.freeprojectapi.com/api/SmartParking/GetSitesByClientId?id=' + clientId)\n   }\n }\n"
                },
                {
                    "date": 1751612961697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,7 +14,7 @@\n   constructor(private http: HttpClient) { }\n \n   getSitesByClientId(): Observable<ResponseModel> {\n     const clientId = this.loginService.loggedUserData.extraId\n-     return this.http.get<ResponseModel>('https://api.freeprojectapi.com/api/SmartParking/GetSitesByClientId?id=' + clientId)\n+     return this.http.get<ResponseModel>('https://api.freeprojectapi.com/api/SmartParking/GetSitesByClientId?id='+clientId)\n   }\n }\n"
                },
                {
                    "date": 1752141860574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,12 +9,18 @@\n })\n export class DashboardService {\n \n   loginService = inject(LoginService);\n+  apiUrl: string = 'https://api.freeprojectapi.com/api/SmartParking/'\n \n   constructor(private http: HttpClient) { }\n \n   getSitesByClientId(): Observable<ResponseModel> {\n     const clientId = this.loginService.loggedUserData.extraId\n-     return this.http.get<ResponseModel>('https://api.freeprojectapi.com/api/SmartParking/GetSitesByClientId?id='+clientId)\n+     return this.http.get<ResponseModel>(this.apiUrl + 'GetSitesByClientId?id='+clientId)\n   }\n+\n+  getBuildingsBySiteId(): Observable<ResponseModel> {\n+    // const siteId = \n+    return this.http.get<ResponseModel>(this.apiUrl + 'GetBuildingBySiteId?id=1')\n+  }\n }\n"
                },
                {
                    "date": 1752141890985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,12 +15,12 @@\n   constructor(private http: HttpClient) { }\n \n   getSitesByClientId(): Observable<ResponseModel> {\n     const clientId = this.loginService.loggedUserData.extraId\n-     return this.http.get<ResponseModel>(this.apiUrl + 'GetSitesByClientId?id='+clientId)\n+     return this.http.get<ResponseModel>(this.apiUrl + \"GetSitesByClientId?id=\"+clientId)\n   }\n \n   getBuildingsBySiteId(): Observable<ResponseModel> {\n     // const siteId = \n-    return this.http.get<ResponseModel>(this.apiUrl + 'GetBuildingBySiteId?id=1')\n+    return this.http.get<ResponseModel>(this.apiUrl + \"GetBuildingBySiteId?id=1\")\n   }\n }\n"
                },
                {
                    "date": 1752141974372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,8 @@\n      return this.http.get<ResponseModel>(this.apiUrl + \"GetSitesByClientId?id=\"+clientId)\n   }\n \n   getBuildingsBySiteId(): Observable<ResponseModel> {\n-    // const siteId = \n-    return this.http.get<ResponseModel>(this.apiUrl + \"GetBuildingBySiteId?id=1\")\n+    const clientId = this.loginService.loggedUserData.extraId\n+    return this.http.get<ResponseModel>(`${this.apiUrl} + \"GetBuildingBySiteId?id=${clientId}\"`)\n   }\n }\n"
                },
                {
                    "date": 1752142037445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,25 @@\n+import { HttpClient } from '@angular/common/http';\n+import { inject, Injectable } from '@angular/core';\n+import { Observable } from 'rxjs';\n+import { ResponseModel } from '../../models/login.model';\n+import { LoginService } from '../login-service/login.service';\n+\n+@Injectable({\n+  providedIn: 'root'\n+})\n+export class DashboardService {\n+\n+  loginService = inject(LoginService);\n+  apiUrl: string = 'https://api.freeprojectapi.com/api/SmartParking/'\n+\n+  constructor(private http: HttpClient) { }\n+\n+  getSitesByClientId(): Observable<ResponseModel> {\n+    const clientId = this.loginService.loggedUserData.extraId\n+     return this.http.get<ResponseModel>(this.apiUrl + \"GetSitesByClientId?id=\"+clientId)\n+  }\n+\n+  getBuildingsBySiteId(siteId: any): Observable<ResponseModel> {\n+    return this.http.get<ResponseModel>(`${this.apiUrl} + \"GetBuildingBySiteId?id=${siteId}\"`)\n+  }\n+}\n"
                },
                {
                    "date": 1752142046074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,34 +18,8 @@\n     const clientId = this.loginService.loggedUserData.extraId\n      return this.http.get<ResponseModel>(this.apiUrl + \"GetSitesByClientId?id=\"+clientId)\n   }\n \n-  getBuildingsBySiteId(siteId: any): Observable<ResponseModel> {\n+  getBuildingsBySiteId(siteId: number): Observable<ResponseModel> {\n     return this.http.get<ResponseModel>(`${this.apiUrl} + \"GetBuildingBySiteId?id=${siteId}\"`)\n   }\n }\n-import { HttpClient } from '@angular/common/http';\n-import { inject, Injectable } from '@angular/core';\n-import { Observable } from 'rxjs';\n-import { ResponseModel } from '../../models/login.model';\n-import { LoginService } from '../login-service/login.service';\n-\n-@Injectable({\n-  providedIn: 'root'\n-})\n-export class DashboardService {\n-\n-  loginService = inject(LoginService);\n-  apiUrl: string = 'https://api.freeprojectapi.com/api/SmartParking/'\n-\n-  constructor(private http: HttpClient) { }\n-\n-  getSitesByClientId(): Observable<ResponseModel> {\n-    const clientId = this.loginService.loggedUserData.extraId\n-     return this.http.get<ResponseModel>(this.apiUrl + \"GetSitesByClientId?id=\"+clientId)\n-  }\n-\n-  getBuildingsBySiteId(): Observable<ResponseModel> {\n-    const clientId = this.loginService.loggedUserData.extraId\n-    return this.http.get<ResponseModel>(`${this.apiUrl} + \"GetBuildingBySiteId?id=${clientId}\"`)\n-  }\n-}\n"
                },
                {
                    "date": 1752142236153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+import { HttpClient } from '@angular/common/http';\n+import { inject, Injectable } from '@angular/core';\n+import { Observable } from 'rxjs';\n+import { ResponseModel } from '../../models/login.model';\n+import { LoginService } from '../login-service/login.service';\n+\n+@Injectable({\n+  providedIn: 'root'\n+})\n+export class DashboardService {\n+\n+  loginService = inject(LoginService);\n+  apiUrl: string = 'https://api.freeprojectapi.com/api/SmartParking/'\n+\n+  constructor(private http: HttpClient) { }\n+\n+  getSitesByClientId(): Observable<ResponseModel> {\n+    const clientId = this.loginService.loggedUserData.extraId\n+     return this.http.get<ResponseModel>(this.apiUrl + \"GetSitesByClientId?id=\"+clientId)\n+  }\n+\n+  getBuildingsBySiteId(siteId: number): Observable<ResponseModel> {\n+    return this.http.get<ResponseModel>(`${this.apiUrl} + \"GetBuildingBySiteId?id=${siteId}\"`)\n+  }\n+\n+  getFloorsByBuildingId(buildingId: number): Observable<ResponseModel> {\n+    return this.http.get<ResponseModel>(`${this.apiUrl} GetFloorsByBuildingId?id=1`)\n+  }\n+}\n"
                },
                {
                    "date": 1752142251515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,36 +19,11 @@\n      return this.http.get<ResponseModel>(this.apiUrl + \"GetSitesByClientId?id=\"+clientId)\n   }\n \n   getBuildingsBySiteId(siteId: number): Observable<ResponseModel> {\n-    return this.http.get<ResponseModel>(`${this.apiUrl} + \"GetBuildingBySiteId?id=${siteId}\"`)\n+    return this.http.get<ResponseModel>(`${this.apiUrl} GetBuildingBySiteId?id=${siteId}`)\n   }\n \n   getFloorsByBuildingId(buildingId: number): Observable<ResponseModel> {\n     return this.http.get<ResponseModel>(`${this.apiUrl} GetFloorsByBuildingId?id=1`)\n   }\n }\n-import { HttpClient } from '@angular/common/http';\n-import { inject, Injectable } from '@angular/core';\n-import { Observable } from 'rxjs';\n-import { ResponseModel } from '../../models/login.model';\n-import { LoginService } from '../login-service/login.service';\n-\n-@Injectable({\n-  providedIn: 'root'\n-})\n-export class DashboardService {\n-\n-  loginService = inject(LoginService);\n-  apiUrl: string = 'https://api.freeprojectapi.com/api/SmartParking/'\n-\n-  constructor(private http: HttpClient) { }\n-\n-  getSitesByClientId(): Observable<ResponseModel> {\n-    const clientId = this.loginService.loggedUserData.extraId\n-     return this.http.get<ResponseModel>(this.apiUrl + \"GetSitesByClientId?id=\"+clientId)\n-  }\n-\n-  getBuildingsBySiteId(siteId: number): Observable<ResponseModel> {\n-    return this.http.get<ResponseModel>(`${this.apiUrl} + \"GetBuildingBySiteId?id=${siteId}\"`)\n-  }\n-}\n"
                },
                {
                    "date": 1752142283343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,7 +23,7 @@\n     return this.http.get<ResponseModel>(`${this.apiUrl} GetBuildingBySiteId?id=${siteId}`)\n   }\n \n   getFloorsByBuildingId(buildingId: number): Observable<ResponseModel> {\n-    return this.http.get<ResponseModel>(`${this.apiUrl} GetFloorsByBuildingId?id=1`)\n+    return this.http.get<ResponseModel>(`${this.apiUrl} GetFloorsByBuildingId?id=${buildingId}`)\n   }\n }\n"
                },
                {
                    "date": 1752143098283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,12 +18,12 @@\n     const clientId = this.loginService.loggedUserData.extraId\n      return this.http.get<ResponseModel>(this.apiUrl + \"GetSitesByClientId?id=\"+clientId)\n   }\n \n-  getBuildingsBySiteId(siteId: number): Observable<ResponseModel> {\n+  getBuildingsBySiteId(siteId: string): Observable<ResponseModel> {\n     return this.http.get<ResponseModel>(`${this.apiUrl} GetBuildingBySiteId?id=${siteId}`)\n   }\n \n-  getFloorsByBuildingId(buildingId: number): Observable<ResponseModel> {\n+  getFloorsByBuildingId(buildingId: string): Observable<ResponseModel> {\n     return this.http.get<ResponseModel>(`${this.apiUrl} GetFloorsByBuildingId?id=${buildingId}`)\n   }\n }\n"
                },
                {
                    "date": 1752143756133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,35 @@\n+import { HttpClient } from '@angular/common/http';\n+import { inject, Injectable } from '@angular/core';\n+import { Observable } from 'rxjs';\n+import { ResponseModel } from '../../models/login.model';\n+import { LoginService } from '../login-service/login.service';\n+\n+@Injectable({\n+  providedIn: 'root'\n+})\n+export class DashboardService {\n+\n+  loginService = inject(LoginService);\n+  apiUrl: string = 'https://api.freeprojectapi.com/api/SmartParking/'\n+\n+  constructor(private http: HttpClient) { }\n+\n+  getSitesByClientId(): Observable<ResponseModel> {\n+    const userData = this.loginService.loggedUserData;\n+  if (!userData) {\n+    throw new Error('User is not logged in.');\n+  }\n+\n+    // const clientId = this.loginService.loggedUserData.extraId\n+    const clientId = userData.extraId;\n+     return this.http.get<ResponseModel>(this.apiUrl + \"GetSitesByClientId?id=\"+clientId)\n+  }\n+\n+  getBuildingsBySiteId(siteId: string): Observable<ResponseModel> {\n+    return this.http.get<ResponseModel>(`${this.apiUrl} GetBuildingBySiteId?id=${siteId}`)\n+  }\n+\n+  getFloorsByBuildingId(buildingId: string): Observable<ResponseModel> {\n+    return this.http.get<ResponseModel>(`${this.apiUrl} GetFloorsByBuildingId?id=${buildingId}`)\n+  }\n+}\n"
                },
                {
                    "date": 1752143984899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,40 +25,11 @@\n      return this.http.get<ResponseModel>(this.apiUrl + \"GetSitesByClientId?id=\"+clientId)\n   }\n \n   getBuildingsBySiteId(siteId: string): Observable<ResponseModel> {\n-    return this.http.get<ResponseModel>(`${this.apiUrl} GetBuildingBySiteId?id=${siteId}`)\n+    return this.http.get<ResponseModel>(`${this.apiUrl}GetBuildingBySiteId?id=${siteId}`)\n   }\n \n   getFloorsByBuildingId(buildingId: string): Observable<ResponseModel> {\n-    return this.http.get<ResponseModel>(`${this.apiUrl} GetFloorsByBuildingId?id=${buildingId}`)\n+    return this.http.get<ResponseModel>(`${this.apiUrl}GetFloorsByBuildingId?id=${buildingId}`)\n   }\n }\n-import { HttpClient } from '@angular/common/http';\n-import { inject, Injectable } from '@angular/core';\n-import { Observable } from 'rxjs';\n-import { ResponseModel } from '../../models/login.model';\n-import { LoginService } from '../login-service/login.service';\n-\n-@Injectable({\n-  providedIn: 'root'\n-})\n-export class DashboardService {\n-\n-  loginService = inject(LoginService);\n-  apiUrl: string = 'https://api.freeprojectapi.com/api/SmartParking/'\n-\n-  constructor(private http: HttpClient) { }\n-\n-  getSitesByClientId(): Observable<ResponseModel> {\n-    const clientId = this.loginService.loggedUserData.extraId\n-     return this.http.get<ResponseModel>(this.apiUrl + \"GetSitesByClientId?id=\"+clientId)\n-  }\n-\n-  getBuildingsBySiteId(siteId: string): Observable<ResponseModel> {\n-    return this.http.get<ResponseModel>(`${this.apiUrl} GetBuildingBySiteId?id=${siteId}`)\n-  }\n-\n-  getFloorsByBuildingId(buildingId: string): Observable<ResponseModel> {\n-    return this.http.get<ResponseModel>(`${this.apiUrl} GetFloorsByBuildingId?id=${buildingId}`)\n-  }\n-}\n"
                },
                {
                    "date": 1752306132546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,5 +31,11 @@\n \n   getFloorsByBuildingId(buildingId: string): Observable<ResponseModel> {\n     return this.http.get<ResponseModel>(`${this.apiUrl}GetFloorsByBuildingId?id=${buildingId}`)\n   }\n+\n+    bookSpot(obj: any): Observable<ResponseModel> {\n+    return this.http.post<ResponseModel>(`${this.apiUrl}AddParking`, obj)\n+  }\n }\n+\n+// https://api.freeprojectapi.com/api/SmartParking/AddParking\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752306376843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,15 +15,15 @@\n   constructor(private http: HttpClient) { }\n \n   getSitesByClientId(): Observable<ResponseModel> {\n     const userData = this.loginService.loggedUserData;\n-  if (!userData) {\n-    throw new Error('User is not logged in.');\n-  }\n+    if (!userData) {\n+      throw new Error('User is not logged in.');\n+    }\n \n     // const clientId = this.loginService.loggedUserData.extraId\n     const clientId = userData.extraId;\n-     return this.http.get<ResponseModel>(this.apiUrl + \"GetSitesByClientId?id=\"+clientId)\n+    return this.http.get<ResponseModel>(this.apiUrl + \"GetSitesByClientId?id=\" + clientId)\n   }\n \n   getBuildingsBySiteId(siteId: string): Observable<ResponseModel> {\n     return this.http.get<ResponseModel>(`${this.apiUrl}GetBuildingBySiteId?id=${siteId}`)\n@@ -32,9 +32,9 @@\n   getFloorsByBuildingId(buildingId: string): Observable<ResponseModel> {\n     return this.http.get<ResponseModel>(`${this.apiUrl}GetFloorsByBuildingId?id=${buildingId}`)\n   }\n \n-    bookSpot(obj: any): Observable<ResponseModel> {\n+  bookSpot(obj: any): Observable<ResponseModel> {\n     return this.http.post<ResponseModel>(`${this.apiUrl}AddParking`, obj)\n   }\n }\n \n"
                },
                {
                    "date": 1752307598598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,12 @@\n   getFloorsByBuildingId(buildingId: string): Observable<ResponseModel> {\n     return this.http.get<ResponseModel>(`${this.apiUrl}GetFloorsByBuildingId?id=${buildingId}`)\n   }\n \n+  getAllParkingByFloor(floorId: string): Observable<ResponseModel> {\n+    return this.http.get<ResponseModel>(`${this.apiUrl}GetAllParkingByFloor?id=${floorId}`)\n+  }\n+\n   bookSpot(obj: any): Observable<ResponseModel> {\n     return this.http.post<ResponseModel>(`${this.apiUrl}AddParking`, obj)\n   }\n }\n"
                },
                {
                    "date": 1752311617372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,7 +39,10 @@\n \n   bookSpot(obj: any): Observable<ResponseModel> {\n     return this.http.post<ResponseModel>(`${this.apiUrl}AddParking`, obj)\n   }\n+\n+  releaseSpot(obj: any): Observable<ResponseModel> {\n+    return this.http.post<ResponseModel>(`${this.apiUrl}MarExit`, obj)\n\\ No newline at end of file\n+  }\n }\n \n-// https://api.freeprojectapi.com/api/SmartParking/AddParking\n"
                },
                {
                    "date": 1752311836302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,5 +43,6 @@\n \n   releaseSpot(obj: any): Observable<ResponseModel> {\n     return this.http.post<ResponseModel>(`${this.apiUrl}MarExit`, obj)\n   }\n-}\n\\ No newline at end of file\n+}\n+\n"
                }
            ],
            "date": 1751612145779,
            "name": "Commit-0",
            "content": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  constructor(private http: HttpClient) { }\n\n  getSitesByClientId() {\n    this.http.get('https://api.freeprojectapi.com/api/SmartParking/GetSitesByClientId?id=2')\n  }\n}\n"
        }
    ]
}